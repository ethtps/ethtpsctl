#!/usr/bin/env bash
# shellcheck source=/dev/null
source "./lib/oo-bootstrap.sh"
namespace ctlmkr
import util/log
Log::Addbuildput ctlmkr INFO
import util/variable
import util/exception
import util/tryCatch
import util/namedParameters
import util/class
import util/test
import util/type
import util/command
import Array
import String
source './framework/preprocessor/preprocessor.sh'

base_dir="$(cd "${BASH_SOURCE[0]%/*}" && pwd)/"

delete_dir_contents() {
  @required dir
  if [ "${dir}" == "" ]; then
    dir="$1"
  fi
  rm -rf "${base_dir:?}${dir:?}/*" >/dev/null 2>&1
}

create_dir_if_not_exists() {
  @required dir
  test -d "${base_dir}${dir}" || {
    mkdir "${base_dir}${dir}" >/dev/null 2>&1
  }
}

clean_dir() {
  @required dir
  delete_dir_contents "${dir}"
}

_run_preprocessor() {
  @required string destination
  destination="$1"

  destination="${base_dir}build/${destination}"
  test -n "${destination}" || {
    Log "destination is required. Got '${destination}'"
    exit 1
  }

  describe "Preprocessor"
  it "should replace all definitions in ${destination}"
  try
  do_replacements "${destination}"
  expectPass
  summary
}

_ctlmkr_copy_files() {
  local script_name
  script_name="$1"
  test -n "${script_name}" || {
    Log "script_name is required. Got '${script_name}'"
    exit 1
  }

  local origin
  local content
  local destination

  origin="${base_dir}${script_name}"
  content=$(cat "${origin}")
  destination="${base_dir}build/${script_name}"

  echo "${content}" >"${destination}"
}

_ctlmkr_prepare() {
  local dir="build"

  describe "ctlmkr_prepare"

  it 'should create the buildput directory'
  try
  create_dir_if_not_exists "${dir}"
  expectPass

  it 'should clean the buildput directory'
  try
  clean_dir "${dir}"
  expectPass

  it 'should copy all files to buildput'
  try
  _ctlmkr_copy_files "$@"
  expectPass

  summary
}

_run() {
  _ctlmkr_prepare "$@"
  _run_preprocessor "$@"
  Log "Done"
}

if [[ $# -gt 0 ]]; then
  string script_name
  script_name="$1"
  #Log "script_name: ${script_name}"
  test -f "${base_dir}${script_name}" || {
    Log "File not found: ${base_dir}${script_name}"
    exit 1
  }
  _run "$@"
else
  Log "Usage:"
  Log "ctlmkr source_filename"
fi
